version: '3.8'

services:
  frontend:
    build:
      context: ../library-reservation-frontend # ✅ ใช้ Path แบบ Relative
      dockerfile: Dockerfile  # ✅ ระบุ Dockerfile ของ Frontend
    container_name: frontend_roombooking
    restart: always
    ports:
      - "3001:80"  # ✅ Frontend เปิดที่ 3001
    networks:
      - backend_networks  # ✅ ใช้ Network ร่วมกับ Backend
    depends_on:
      - backend  # ✅ รันหลังจาก Backend ทำงาน

  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: backend_roombooking
    restart: always
    ports:
      - "5000:5000"
    environment:
      - DATABASE_HOST=mysql
      - DATABASE_PORT=3306
      - DATABASE_USER=root
      - DATABASE_PASSWORD= # ✅ เพิ่มค่าว่าง เพื่อให้ตรงกับ MySQL
      - DATABASE_NAME=buu_library_booking
    depends_on:
      mysql:
        condition: service_healthy
    networks:
      - backend_networks
  mysql:
    image: mysql:latest
    container_name: mysql_db
    restart: always
    environment:
      - MYSQL_ALLOW_EMPTY_PASSWORD=yes
      - MYSQL_DATABASE=buu_library_booking # ✅ เปลี่ยนให้ตรงกับใน TypeORM
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - backend_networks
    healthcheck:
      test: [ "CMD", "mysqladmin", "ping", "-h", "localhost" ]
      interval: 10s
      retries: 5
      timeout: 5s

  phpmyadmin:
    image: phpmyadmin/phpmyadmin:latest
    container_name: phpmyadmin
    restart: always
    ports:
      - "8080:80"
    environment:
      - PMA_HOST=mysql
      - PMA_ROOT_PASSWORD=
    depends_on:
      - mysql
    networks:
      - backend_networks

networks:
  backend_networks:
  
volumes:
  mysql_data:
